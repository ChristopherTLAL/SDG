<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>西浦综评面试练习系统</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@400;500;700&family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <style>
        body {
            font-family: 'Inter', 'Noto Sans SC', sans-serif;
            background-color: #f8f9fa;
        }
        .xdf-green { color: #009944; }
        .header, .footer {
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        .nav-button {
            padding: 8px 12px;
            border-radius: 6px;
            font-weight: 500;
            transition: background-color 0.3s, color 0.3s;
            color: #4b5563; /* gray-600 */
        }
        .nav-button.active {
            background-color: #e5f4ec; /* light green */
            color: #009944; /* xdf-green */
        }
        .nav-button:not(.active):hover {
            background-color: #f3f4f6; /* gray-100 */
        }
        .card-container {
            perspective: 1500px;
        }
        .card {
            width: 100%;
            min-height: 500px;
            position: relative;
            transition: transform 0.8s;
            transform-style: preserve-3d;
        }
        .card.is-flipped {
            transform: rotateY(180deg);
        }
        .card-face {
            position: absolute;
            width: 100%;
            height: 100%;
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
            display: flex;
            flex-direction: column;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 8px 30px rgba(0,0,0,0.1);
            background: white;
        }
        .card-face-front {
             justify-content: center;
             align-items: center;
        }
        .card-face-back {
            transform: rotateY(180deg);
            justify-content: space-between;
            overflow-y: auto;
        }
        .star-rating label {
            cursor: pointer;
            color: #d1d5db;
            transition: color 0.2s;
        }
        .star-rating input:checked ~ label,
        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: #f59e0b;
        }
        .star-rating input:checked + label {
            color: #f59e0b;
        }
        .page-content {
            display: none;
        }
        .page-content.active {
            display: block;
        }
        .card-face-back::-webkit-scrollbar { width: 8px; }
        .card-face-back::-webkit-scrollbar-track { background: #f1f1f1; border-radius: 1rem; }
        .card-face-back::-webkit-scrollbar-thumb { background: #888; border-radius: 1rem; }
        .card-face-back::-webkit-scrollbar-thumb:hover { background: #555; }
        details > summary {
            cursor: pointer;
            padding: 1rem;
            background-color: #f9fafb;
            border-radius: 0.5rem;
            font-weight: 500;
            color: #374151;
            transition: background-color 0.2s;
        }
        details > summary:hover {
            background-color: #f3f4f6;
        }
        details[open] > summary {
            background-color: #f3f4f6;
        }
    </style>
</head>
<body class="text-gray-800">

    <!-- Header -->
    <header class="header sticky top-0 z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center">
                    <span class="text-2xl font-bold xdf-green" style="font-family: 'Noto Sans SC', sans-serif;">织梦</span>
                    <span class="hidden sm:block ml-4 text-xl font-semibold text-gray-700">西浦综评面试练习系统</span>
                </div>
                <nav class="flex items-center space-x-2">
                    <button id="nav-individual" class="nav-button">个人面试</button>
                    <button id="nav-group" class="nav-button">小组讨论</button>
                    <button id="nav-progress" class="nav-button">进度看板</button>
                </nav>
            </div>
        </div>
    </header>

    <main class="py-10">
        <!-- Practice Page -->
        <div id="page-practice" class="page-content">
            <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
                 <div class="card-container">
                    <div id="card" class="card">
                        <div id="card-front" class="card-face card-face-front text-center">
                            <p class="text-gray-500 mb-4">Click the card to flip</p>
                            <h2 id="question-en" class="text-2xl md:text-3xl font-semibold leading-tight"></h2>
                        </div>
                        <div id="card-back" class="card-face card-face-back items-start text-left">
                            <div class="w-full">
                                <div class="mb-6">
                                    <h3 class="font-bold text-lg mb-2 border-l-4 border-green-500 pl-2">考核重心 (Assessment Focus)</h3>
                                    <p id="question-focus" class="text-gray-600"></p>
                                </div>
                                <div class="mb-6">
                                    <h3 class="font-bold text-lg mb-2 border-l-4 border-green-500 pl-2">解答角度和思路 (Answering Angles)</h3>
                                    <ul id="question-perspectives" class="list-disc list-inside text-gray-600 space-y-2"></ul>
                                </div>
                            </div>
                            <div class="w-full mt-auto pt-6 border-t">
                                <h3 class="font-bold text-lg mb-3 text-center">请为本次回答自评 (Self-Assessment)</h3>
                                <div id="scoring-system" class="space-y-3"></div>
                                <button id="submit-score-btn" class="w-full mt-4 bg-green-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-green-700 transition duration-300">提交评分 & 下一题</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="text-center mt-6">
                    <button id="skip-btn" class="text-gray-500 hover:text-gray-800 font-medium py-2 px-4">跳过此题 &raquo;</button>
                </div>
            </div>
        </div>

        <!-- Progress Page -->
        <div id="page-progress" class="page-content">
            <div class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-center mb-8">我的进度看板</h2>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8 bg-white p-4 rounded-lg shadow-sm">
                    <div id="stat-progress" class="text-center p-4"></div>
                    <div id="stat-avg-score" class="text-center p-4"></div>
                    <div id="stat-count" class="text-center p-4"></div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div class="bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-xl font-semibold mb-4 text-center">核心能力雷达图</h3>
                        <div class="w-full h-80 flex items-center justify-center">
                            <canvas id="skill-radar-chart"></canvas>
                        </div>
                    </div>
                    <div class="bg-white p-6 rounded-lg shadow-md">
                        <h3 class="text-xl font-semibold mb-4 text-center">个性化提升建议</h3>
                        <div id="feedback-container" class="space-y-4 text-gray-700"></div>
                    </div>
                </div>

                <div class="mt-8 bg-white p-4 rounded-lg shadow-md">
                    <details>
                        <summary>查看详细练习历史</summary>
                        <div id="history-container" class="mt-4 max-h-96 overflow-y-auto"></div>
                    </details>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="footer mt-12 py-6">
        <div class="text-center text-gray-500 text-sm">
            <p>&copy; 版权所有</p>
        </div>
    </footer>

    <script>
    // JSDoc type definitions for static analysis
    /**
     * @typedef {Object} Question
     * @property {number} id
     * @property {string} type
     * @property {string} question_en
     * @property {string} focus
     * @property {string[]} perspectives
     * @property {string[]} skills
     */

    /** @typedef {{[itemId: string]: number}} QuestionScore */
    /** @typedef {{[questionId: string]: QuestionScore}} Scores */
    /** @typedef {{[skillName: string]: number}} SkillData */
    
    // Extend the Window interface to include Chart for TypeScript
    /** @type {any} */
    declare global {
        interface Window {
            Chart: any;
        }
    }
    const Chart = window.Chart;

    /** @type {Question[]} */
    const allQuestions = [
        { id: 1, type: 'group', question_en: "Should museums and art galleries be free to the public?", focus: "考察学生的公共资源分配、文化价值与经济效益平衡的思辨能力。", perspectives: ["支持免费：提升公民文化素养、促进教育公平、增强社会凝聚力。", "反对免费：运营成本高昂、可探索差价门票或会员制、免费可能导致资源滥用。", "混合模式：基础展览免费，特展收费，寻求政府与私人赞助平衡。"], skills: ["academic", "adaptability"] },
        { id: 2, type: 'group', question_en: "Do you think it is important to protect local traditions in today's globalized world?", focus: "考察学生的文化认同感、全球化视野以及对文化多样性的理解。", perspectives: ["重要性：文化是身份认同的根基、促进旅游与经济、为世界文明贡献多样性。", "挑战：全球化冲击下的文化同质化、年轻人兴趣减弱、保护方式的与时俱进。", "如何保护：教育传承、数字化存档、与现代元素结合创新。"], skills: ["global_vision", "academic"] },
        { id: 3, type: 'group', question_en: "Should community service be a mandatory part of high school education?", focus: "考察学生的社会责任感、对教育本质的理解以及批判性思维。", perspectives: ["支持强制：培养同理心和社会责任感、提供实践技能、丰富个人履历。", "反对强制：强制可能违背志愿精神、占用学业时间、服务质量难以保证。", "替代方案：鼓励并提供多样化平台、学分激励、将社区议题融入课程。"], skills: ["comprehensive", "academic"] },
        { id: 4, type: 'individual', question_en: "What is your opinion on the 'gap year' that students in some countries take before university?", focus: "考察学生的生涯规划意识、独立思考能力和开放心态。", perspectives: ["优点：自我探索、积累社会经验、培养独立性、明确学术和职业方向。", "缺点：可能导致学习脱节、经济成本高、存在安全风险、同辈压力。", "个人适用性：取决于个人目标、家庭条件和心理成熟度。"], skills: ["comprehensive", "global_vision"] },
        { id: 5, type: 'group', question_en: "Should businesses contribute to protecting the environment?", focus: "考察学生的社会责任、商业伦理和可持续发展理念。", perspectives: ["企业责任：企业是社会公民，应承担环境责任(CSR)、环保可提升品牌形象。", "实现方式：采用清洁能源、减少污染排放、发展循环经济、投资环保技术。", "政府与消费者角色：政府应立法监管、消费者可用脚投票选择绿色产品。"], skills: ["academic", "global_vision"] },
        { id: 6, type: 'group', question_en: "Is a university degree essential for a successful career today?", focus: "考察学生对现代职业路径的理解和对高等教育价值的辩证思考。", perspectives: ["是：提供系统性知识、培养批判性思维、是许多专业领域的敲门砖、提供校友网络。", "否：职业技能教育同样重要、创业成功不乏无大学学历者、在线学习资源丰富。", "结论：对于特定领域至关重要，但成功定义多元，终身学习能力是关键。"], skills: ["academic", "comprehensive"] },
        { id: 7, type: 'group', question_en: "Should governments invest more in public transportation than in other urban projects?", focus: "考察学生的城市规划视野、对公共利益和效率的权衡能力。", perspectives: ["支持：缓解交通拥堵、减少空气污染、促进社会公平（照顾低收入人群）。", "反对：其他项目（如公园、医疗、教育）同样重要，需平衡发展。", "综合考量：根据城市发展阶段和具体需求制定预算优先级。"], skills: ["academic", "adaptability"] },
        { id: 8, type: 'group', question_en: "What are the pros and cons of social media on society?", focus: "考察学生对科技影响的辩证分析能力。", perspectives: ["优点：信息传播迅速、促进社交连接、为个人提供发声平台。", "缺点：虚假信息泛滥、网络欺凌、导致社交焦虑和隐私问题。", "如何应对：提升媒介素养、平台加强内容审核、用户进行自我管理。"], skills: ["academic", "comprehensive"] },
        { id: 9, type: 'individual', question_en: "Is failure a necessary part of success?", focus: "考察学生的逆商、成长型思维和反思能力。", perspectives: ["是：从失败中学习经验教训、锻炼毅力和韧性、激发创新。", "如何面对失败：积极复盘、调整心态、寻求帮助、不畏惧再次尝试。", "个人经历：结合一个具体事例，说明如何从失败中学习并最终取得进步。"], skills: ["comprehensive", "adaptability"] },
        { id: 10, type: 'group', question_en: "Should students be allowed to use smartphones in class?", focus: "考察学生对科技在教育中应用的辩证看法。", perspectives: ["支持：可作为学习工具（查资料、互动）、培养学生自控能力。", "反对：容易分散注意力、可能导致作弊、加剧学生间攀比。", "管理策略：规定使用时间与场合、教师引导性使用、学校制定明确政策。"], skills: ["academic", "adaptability"] },
        { id: 11, type: 'individual', question_en: "Describe a time you worked in a team. What was your role and what did you learn?", focus: "考察学生的团队协作能力、沟通能力和自我反思能力。", perspectives: ["角色定位：领导者(Leader)、协调者(Coordinator)、执行者(Implementer)、创新者(Innovator)。", "遇到的挑战：意见不合、进度落后、沟通不畅。", "学习与成长：学会了倾听、有效沟通、责任分担、冲突解决。"], skills: ["comprehensive"] },
        { id: 12, type: 'individual', question_en: "Why did you choose to apply to XJTLU? And why this specific major category?", focus: "考察学生对西浦的了解程度、申请动机和学业规划，是适配度的核心问题。", perspectives: ["为何选择西浦：国际化教育模式、研究导向型教学、中英双学位、注重学生自主性。", "为何选择该大类：结合个人兴趣、高中学科优势、未来职业规划。", "展现匹配度：将个人特质（如独立、爱探索）与西浦文化联系起来。"], skills: ["adaptability", "academic"] },
        { id: 13, type: 'individual', question_en: "How do you define 'critical thinking' and can you give an example?", focus: "考察学生对核心学术能力的理解和应用。", perspectives: ["定义：不满足于表面信息，主动质疑、多角度分析、评估证据并形成独立判断。", "过程：信息获取 -> 质疑辨伪 -> 多维分析 -> 形成结论 -> 反思评估。", "举例：结合一个社会热点或学术问题，展示自己的思考过程。"], skills: ["academic"] },
        { id: 14, type: 'individual', question_en: "What is your biggest strength and your biggest weakness?", focus: "考察学生的自我认知和诚实度。", perspectives: ["优点：选择与学术或团队相关的优点（如：学习能力强、有责任心、善于合作），并用具体事例证明。", "缺点：选择一个真实但无伤大雅且正在改进的缺点（如：有时过于追求细节、公众演讲紧张），重点在于展示改进措施和成效。"], skills: ["comprehensive", "adaptability"] },
        { id: 15, type: 'group', question_en: "In your opinion, what is the biggest challenge facing your generation?", focus: "考察学生的社会洞察力和全球视野。", perspectives: ["挑战一：科技快速迭代带来的机遇与焦虑（如AI取代工作）。", "挑战二：环境问题与可持续发展的压力。", "挑战三：全球化与逆全球化背景下的文化与身份认同冲突。", "个人责任：表达自己希望如何通过学习和努力来应对这些挑战。"], skills: ["global_vision", "academic"] },
        { id: 16, type: 'group', question_en: "Should a country's artistic and cultural heritage be returned to their country of origin?", focus: "考察学生对文化财产、国际关系和历史问题的复杂性理解。", perspectives: ["支持归还：文化归属感和民族尊严、历史正义、有助于物归原主的研究和展示。", "反对归还/保留现状：更好的保存条件、世界主义（文化属于全人类）、法律和所有权复杂性。", "解决方案：数字化共享、长期租借、合作展览。"], skills: ["global_vision", "academic"] },
        { id: 17, type: 'group', question_en: "Is online learning as effective as traditional classroom learning?", focus: "考察学生对不同教育模式的辩证分析能力。", perspectives: ["在线学习优点：灵活性高、资源丰富、可重复观看。", "传统课堂优点：互动性强、学习氛围好、纪律性强。", "混合模式的未来：结合两者优点，实现个性化和高效学习。", "个人偏好：结合自身学习习惯，说明哪种方式更适合自己，为什么。"], skills: ["academic", "adaptability"] },
        { id: 18, type: 'individual', question_en: "What does 'leadership' mean to you? Do you consider yourself a leader?", focus: "考察学生对领导力的理解和自身潜力认知。", perspectives: ["领导力定义：不是职位，而是影响力。包括设定愿景、激励他人、承担责任、善于倾听。", "类型：服务型领导、变革型领导等。", "自我评估：不一定要说自己是天生的领导者，可以强调自己具备某些领导力特质（如责任感、协调能力），并用事例证明。"], skills: ["comprehensive"] },
        { id: 19, type: 'group', question_en: "Should college athletes be paid?", focus: "考察学生对教育、体育和商业三者关系的思辨能力。", perspectives: ["支持：他们为学校创造巨大收入、训练时间长影响学业、支付学费和生活费。", "反对：他们已获得奖学金、破坏了大学体育的业余性质、可能导致学生运动员之间的不公。", "中间道路：允许他们接受商业代言、提供更好的医疗保障和生活津贴。"], skills: ["academic", "comprehensive"] },
        { id: 20, type: 'group', question_en: "How can we encourage more young people to vote?", focus: "考察学生的公民意识和对社会问题的解决能力。", perspectives: ["原因分析：政治冷感、感觉自己一票无用、投票流程复杂。", "解决方案：简化投票流程（如电子投票）、在学校加强公民教育、利用社交媒体宣传、降低投票年龄。"], skills: ["comprehensive", "academic"] },
        { id: 21, type: 'individual', question_en: "Is it more important to be a good listener or a good speaker?", focus: "考察学生的沟通认知和人际交往智慧。", perspectives: ["两者都重要，但倾听是有效沟通的基础。", "好的倾听者：能理解他人需求、建立信任、减少误解。", "好的演讲者：能清晰表达观点、激励他人、传递信息。", "情境依赖：在不同情境下，两者的重要性不同。"], skills: ["comprehensive"] },
        { id: 22, type: 'individual', question_en: "What book or movie has influenced you the most, and why?", focus: "考察学生的思辨深度和人文素养。", perspectives: ["选择一部有深度的作品，而非纯娱乐作品。", "分析影响：它如何改变了你的思维方式、价值观或对世界的看法。", "具体阐述：不要只复述情节，要深入分析作品的主题、人物或思想内涵。"], skills: ["academic", "comprehensive"] },
        { id: 23, type: 'individual', question_en: "If you could have dinner with any three people, living or dead, who would they be and why?", focus: "考察学生的价值观、兴趣广度和思维活跃度。", perspectives: ["选择多样化：可以跨领域、跨时代，如科学家、艺术家、历史人物。", "说明原因：你想向他们学习什么？你想和他们探讨什么问题？", "展现自我：你的选择反映了你的好奇心、关注点和个人抱负。"], skills: ["comprehensive", "global_vision"] },
        { id: 24, type: 'individual', question_en: "How do you handle stress and pressure?", focus: "考察学生的抗压能力和情绪管理能力。", perspectives: ["健康的应对方式：体育锻炼、听音乐、与朋友倾诉、时间管理（从源头减少压力）。", "不健康的应对方式：拖延、逃避、暴饮暴食。", "举例说明：描述一个具体的承压情境，以及你如何成功应对。"], skills: ["comprehensive", "adaptability"] },
        { id: 25, type: 'group', question_en: "Do you think artificial intelligence will have a positive or negative impact on humanity?", focus: "考察学生对前沿科技的认知和辩证思考能力。", perspectives: ["积极影响：提高生产力、辅助医疗诊断、处理危险工作、个性化教育。", "消极影响：就业冲击、算法偏见、隐私安全、伦理困境（如自主武器）。", "结论：技术是中性的，关键在于人类如何设计、使用和监管它。"], skills: ["academic", "global_vision"] },
        { id: 26, type: 'group', question_en: "What does 'global citizenship' mean to you?", focus: "考察学生的全球视野和跨文化理解。", perspectives: ["定义：认识到自己是全球社区的一员，对全球性问题负有责任。", "具体表现：关注全球议题（如气候变化）、尊重文化多样性、具备跨文化沟通能力。", "个人实践：通过参与模联、阅读外文资讯、与国际学生交流等方式来培养。"], skills: ["global_vision", "adaptability"] },
        { id: 27, type: 'group', question_en: "Should there be a limit to freedom of speech?", focus: "考察学生对核心社会价值的深刻理解和思辨能力。", perspectives: ["绝对自由 vs. 相对自由：探讨言论自由的边界。", "限制的理由：不能损害他人名誉（诽谤）、煽动暴力、危害国家安全。", "挑战：如何在保护言论自由和防止其被滥用之间找到平衡点，尤其是在网络时代。"], skills: ["academic"] },
        { id: 28, type: 'individual', question_en: "Describe a time you had to learn a difficult skill. How did you approach it?", focus: "考察学生的学习能力、毅力和方法论。", perspectives: ["分解任务：将复杂技能分解为小块，逐个攻破。", "寻求资源：查阅资料、观看教程、请教他人。", "持续练习与反馈：刻意练习，并根据反馈不断调整。", "保持动力：设定小目标，庆祝阶段性成果。"], skills: ["comprehensive", "adaptability"] },
        { id: 29, type: 'group', question_en: "If you had the power to change one thing about your country's education system, what would it be?", focus: "考察学生的批判性思维、创新意识和对教育的理解。", perspectives: ["变革点一：减少应试压力，增加对综合素质的评估。", "变革点二：引入更多跨学科课程和项目制学习。", "变革点三：加强心理健康教育和生涯规划指导。", "说明理由：阐述这一变革为何重要，以及它可能带来的积极影响。"], skills: ["academic", "comprehensive"] },
        { id: 30, type: 'group', question_en: "Is space exploration a worthwhile investment?", focus: "考察学生对科学探索、长远利益和资源分配的看法。", perspectives: ["支持：推动科技进步（材料、通信）、激发人类探索精神、可能为人类未来找到新家园。", "反对：成本极其高昂，地球上还有很多紧迫问题（贫困、疾病）需要资金。", "综合观点：可以适度投资，同时积极推动技术商业化，降低成本，并让空间技术服务于解决地球问题。"], skills: ["academic", "global_vision"] },
        { id: 31, type: 'group', question_en: "What role should art play in society?", focus: "考察学生的美学素养和对人文精神的理解。", perspectives: ["角色一：记录历史和反映社会现实。", "角色二：激发情感共鸣和提供精神慰藉。", "角色三：挑战传统观念和激发社会变革。", "角色四：作为一种产业，促进经济和旅游发展。"], skills: ["academic", "comprehensive"] },
        { id: 32, type: 'individual', question_en: "How will your unique background and experience contribute to the XJTLU community?", focus: "考察学生的自我认知，以及能为大学社区带来的多样性价值。", perspectives: ["独特背景：可以是学术特长、项目经历、文化背景、艺术或体育才能。", "如何贡献：在课堂讨论中提供不同视角、组织学生活动、参与社团、在项目中与同学协作。", "展现积极性：表达出强烈的意愿去分享和奉献。"], skills: ["adaptability", "comprehensive"] },
        { id: 33, type: 'individual', question_en: "Do you agree that a person's success is determined more by their attitude than their aptitude?", focus: "考察学生对成功要素的辩证理解。", perspectives: ["态度（Attitude）：如毅力、成长型思维、积极性，决定了你能走多远。", "天资（Aptitude）：天赋和初始能力，决定了你的起点和学习速度。", "关系：天资决定上限，但态度决定你能否达到上限。两者相辅相成。"], skills: ["academic", "comprehensive"] },
        { id: 34, type: 'group', question_en: "Should governments provide a universal basic income (UBI)?", focus: "考察学生对前沿社会经济政策的了解和分析能力。", perspectives: ["支持UBI：应对AI带来的失业、减少贫困、提升公民创业和学习的自由度。", "反对UBI：巨大的财政负担、可能降低工作意愿、通货膨胀风险。", "实施挑战：资金来源、发放标准、如何进行小规模社会实验。"], skills: ["academic", "global_vision"] },
        { id: 35, type: 'individual', question_en: "What is more important in a job: salary or job satisfaction?", focus: "考察学生的职业价值观和对幸福的理解。", perspectives: ["薪水的重要性：满足基本生活需求、提供安全感、是价值的一种体现。", "工作满意度的重要性：带来成就感、促进个人成长、有益于身心健康。", "动态平衡：在不同的人生阶段，两者的权重可能不同。理想状态是找到两者的平衡点。"], skills: ["comprehensive"] },
        { id: 36, type: 'group', question_en: "How can we solve the problem of misinformation and 'fake news'?", focus: "考察学生对当代媒介环境的洞察和解决复杂问题的能力。", perspectives: ["平台责任：加强事实核查和算法透明度。", "政府与机构：立法惩处造谣者，推广媒介素养教育。", "个人责任：培养批判性思维，核查信息来源，不轻易转发。", "技术方案：利用AI技术辅助识别虚假信息。"], skills: ["academic", "global_vision"] },
        { id: 37, type: 'individual', question_en: "Describe a time you disagreed with a decision or a rule. What did you do?", focus: "考察学生的批判性精神、沟通技巧和解决问题的成熟度。", perspectives: ["行动步骤：首先理解规则背后的原因 -> 理性分析其不合理之处 -> 寻找合适的渠道和方式提出建议（而非公开对抗） -> 如果无法改变，思考如何在该规则下更好地适应或工作。", "展现成熟度：重点在于建设性的沟通，而非单纯的抱怨或反抗。"], skills: ["comprehensive", "adaptability"] },
        { id: 38, type: 'group', question_en: "Do you think a multicultural society is a strong society?", focus: "考察学生的跨文化视野和对社会多样性的理解。", perspectives: ["优点：文化丰富性、激发创新和活力、增强社会适应性和韧性。", "挑战：可能存在文化冲突、社会融合问题、沟通障碍。", "成功的关键：建立在相互尊重、平等机会和共同核心价值观的基础上。"], skills: ["global_vision", "academic"] },
        { id: 39, type: 'individual', question_en: "If you could start any club at XJTLU, what would it be and why?", focus: "考察学生的兴趣、创造力和领导力潜质。", perspectives: ["俱乐部构想：结合自己的特长和兴趣，提出一个具体的俱乐部（如：人工智能伦理探讨社、城市可持续发展观察社）。", "目的和活动：阐述成立该俱乐部的目的，以及计划开展哪些活动。", "展现价值：说明该俱乐部能为西浦社区带来什么独特的价值。"], skills: ["comprehensive", "adaptability"] },
        { id: 40, type: 'group', question_en: "What do you think is the purpose of higher education?", focus: "考察学生对教育本质的宏观思考。", perspectives: ["个人层面：获取专业知识、培养批判性思维、实现个人成长和职业发展。", "社会层面：培养合格的公民、推动科学研究和创新、传承与创造文化。", "西浦的视角：强调其培养具备国际视野和竞争力的世界公民的目标。"], skills: ["academic", "adaptability"] },
        { id: 41, type: 'group', question_en: "Should fast food companies be held responsible for obesity?", focus: "考察学生对个人责任和企业责任界限的思辨能力。", perspectives: ["企业责任：营销策略诱导消费、提供高热量食物、信息披露不充分。", "个人责任：消费者有自由选择权，应为自己的饮食习惯负责。", "政府责任：应加强监管（如强制营养标签）、推广健康饮食教育。", "综合观点：责任是多方的，不能完全归咎于某一方。"], skills: ["academic"] },
        { id: 42, type: 'individual', question_en: "What qualities do you look for in a friend?", focus: "考察学生的人际价值观。", perspectives: ["品质：诚实、可靠、善良、有同理心、幽默感、积极向上。", "双向性：阐述自己如何努力成为别人眼中具备这些品质的朋友。", "这不仅仅是关于交友，也反映了你的团队协作价值观。"], skills: ["comprehensive"] },
        { id: 43, type: 'individual', question_en: "How do you stay informed about current events?", focus: "考察学生的信息获取渠道和媒介素养。", perspectives: ["渠道多样性：主流媒体（国内外）、深度分析期刊、学术报告、纪录片。", "批判性获取：关注不同来源的报道，进行交叉验证，警惕偏见。", "展现全球视野：提及关注国际新闻，而不仅仅是国内新闻。"], skills: ["global_vision", "academic"] },
        { id: 44, type: 'individual', question_en: "If you were an inventor, what would you invent and why?", focus: "考察学生的创新思维和对社会问题的关注。", perspectives: ["发现问题：从日常生活、学习或社会议题中发现一个希望解决的问题。", "创新方案：提出一个具体的、有创意的解决方案（你的发明）。", "阐述价值：说明你的发明如何解决这个问题，以及它能带来的社会效益。"], skills: ["comprehensive", "academic"] },
        { id: 45, type: 'group', question_en: "Is it better to be a specialist or a generalist?", focus: "考察学生对知识结构和职业发展的看法。", perspectives: ["专才（Specialist）：在某一领域有深度，是专家，不可替代性强。", "通才（Generalist）：知识面广，适应性强，善于连接不同领域。", "T型人才：现代社会更需要“T型人才”，即有专业深度，又有广阔的知识面。这与西浦的跨学科理念相符。"], skills: ["academic", "adaptability"] },
        { id: 46, type: 'individual', question_en: "Describe a situation where your initial judgment was wrong. What did you learn?", focus: "考察学生的反思能力、谦逊和成长心态。", perspectives: ["情景描述：清晰描述一个你最初判断失误的具体事件。", "转变过程：是什么让你意识到自己错了？", "学到的教训：学会了不轻易下结论、多倾听不同意见、勇于承认错误。"], skills: ["comprehensive", "adaptability"] },
        { id: 47, type: 'group', question_en: "Do you think tourism is always beneficial to a country?", focus: "考察学生对经济发展和社会文化影响的辩证分析能力。", perspectives: ["好处：增加收入、创造就业、促进文化交流、改善基础设施。", "坏处：过度旅游破坏环境和历史遗迹、冲击本地文化和生活方式、可能导致物价上涨。", "可持续旅游：探讨如何发展负责任的、对环境和文化友好的旅游业。"], skills: ["academic", "global_vision"] },
        { id: 48, type: 'group', question_en: "In your view, which is more important for a country's development: economic growth or environmental protection?", focus: "考察学生对可持续发展核心矛盾的理解。", perspectives: ["观点一：经济增长优先，先发展后治理。", "观点二：环境保护优先，绿水青山就是金山银山。", "辩证统一：两者并非完全对立，可以追求绿色的、高质量的经济增长，实现双赢。"], skills: ["academic"] },
        { id: 49, type: 'individual', question_en: "How do you define success?", focus: "考察学生的个人价值观和人生目标。", perspectives: ["多元化的成功：成功不只是财富和地位。", "个人定义：可以是实现个人潜能、为社会做出贡献、拥有和谐的人际关系、保持身心健康。", "你的定义应体现出积极、成熟的价值观。"], skills: ["comprehensive"] },
        { id: 50, type: 'individual', question_en: "If you could ask a question to the interviewer, what would you ask?", focus: "考察学生的好奇心、主动性和对学校的真实兴趣。", perspectives: ["好的问题：关于学生研究机会、跨学科项目具体如何运作、学校如何支持学生创业等。", "不好的问题：在官网上能轻易找到答案的问题（如：有多少社团）。", "目的：展现你是一个积极主动、有深度思考的学习者。"], skills: ["adaptability", "comprehensive"] }
    ];

    const selfAssessmentItems = [
        { id: 'clarity', name: '思路清晰度', description: '能否清晰地构思和表达观点' },
        { id: 'logic', name: '逻辑结构', description: '回答是否条理分明，逻辑严谨' },
        { id: 'depth', name: '分析深度', description: '能否多角度、有深度地剖析问题' },
        { id: 'originality', name: '观点新颖性', description: '是否能提出有创意或独特的见解' }
    ];

    const skillMap = {
        academic: "学术能力",
        comprehensive: "综合素质",
        adaptability: "适配度",
        global_vision: "适配度" // Global vision contributes to adaptability
    };

    const feedbackAdvice = {
        "学术能力": {
            low: "学术能力方面有较大提升空间。建议您加强对社会热点、科技前沿知识的系统性学习，并刻意练习将观点结构化（如PREP：观点-原因-例子-总结）。多思考问题的不同层面，尝试从正、反、合三个角度进行分析，避免仅停留在表面。",
            mid: "您的学术基础比较扎实。为更进一步，可以尝试在回答中展现更深的思辨性，比如，在讨论社会问题时，不仅要描述现象，更要探究其背后的根源、利益相关方和长远影响，形成逻辑闭环。",
            high: "您的学术能力表现出色！为了精益求精，可以多关注跨学科议题（如科技与伦理、艺术与商业），尝试将不同领域的知识融会贯通，形成更独特、更有高度的见解，让考官眼前一亮。"
        },
        "综合素质": {
            low: "综合素质是面试中的重要一环。建议您多练习个人经历类问题，学习使用STAR原则（情境-任务-行动-结果）来清晰地讲述故事。同时，在日常交流中，注意培养自己的同理心和沟通技巧，学会倾听和协作。",
            mid: "您的综合素质表现良好。可以尝试在回答中更主动地展现领导力潜质，比如在描述团队合作时，强调自己如何协调冲突、激励队友。面对压力或挑战类问题时，展现出积极解决问题的态度和清晰的行动方案。",
            high: "您的综合素质非常突出，善于沟通和反思。请继续保持，并尝试在回答中展现更高阶的领导力，如愿景规划、影响他人等。确保您的每个故事都能精炼地展现出您的核心软实力。"
        },
        "适配度": {
            low: "您需要更深入地理解西浦的文化和理念。建议您仔细阅读官网，特别是关于“研究导向型教学”、“国际化社区”、“学生为中心”等内容。在回答“为何选择西浦”等问题时，要将自身特质与西浦的理念紧密结合，而不是泛泛而谈。",
            mid: "您对西浦有一定了解。为了更好地展现适配度，可以尝试将西浦的关键词（如自主学习、国际视野、跨学科）更自然地融入到对个人经历和未来规划的阐述中，让考官感受到您是“天选西浦人”。",
            high: "您与西浦的适配度非常高！这会是您面试中的巨大优势。请自信地展现您对西浦教育模式的深刻认同，并结合具体事例说明您已经具备在西浦成功所需要的独立、探索和跨文化协作精神。"
        }
    };
    
    // DOM Elements
    const card = document.getElementById('card');
    const questionEn = document.getElementById('question-en');
    const questionFocus = document.getElementById('question-focus');
    const questionPerspectives = document.getElementById('question-perspectives');
    const scoringSystem = document.getElementById('scoring-system');
    const submitScoreBtn = document.getElementById('submit-score-btn');
    const skipBtn = document.getElementById('skip-btn');
    const pagePractice = document.getElementById('page-practice');
    const pageProgress = document.getElementById('page-progress');
    const navButtons = {
        individual: document.getElementById('nav-individual'),
        group: document.getElementById('nav-group'),
        progress: document.getElementById('nav-progress')
    };

    const stats = {
        progress: document.getElementById('stat-progress'),
        avgScore: document.getElementById('stat-avg-score'),
        count: document.getElementById('stat-count')
    };

    /** @type {Question | null} */
    let currentQuestion: { id: string | number; } | null = null;
    /** @type {{ [key: string]: QuestionScore }} */
    let scores: { [key: string]: { [itemId: string]: number } } = {};
    /** @type {any} */
    let chartInstance: any = null;
    let isFlipping = false;
    /** @type {'individual' | 'group'} */
    let currentMode: 'individual' | 'group' = 'individual';
    
    const questionSources = {
        individual: allQuestions.filter(q => q.type === 'individual'),
        group: allQuestions.filter(q => q.type === 'group')
    };
    
    // --- Data Persistence ---
    function loadScores() {
        const savedScores = localStorage.getItem('xjtlInterviewScores');
        try {
            scores = savedScores ? JSON.parse(savedScores) : {};
        } catch (e) {
            console.error("Error parsing scores from localStorage", e);
            scores = {};
        }
    }

    function saveScores() {
        localStorage.setItem('xjtlInterviewScores', JSON.stringify(scores));
    }

    // --- Core Logic ---
    /**
     * @param {'individual' | 'group'} mode
     * @returns {Question | null}
     */
    function getNextQuestion(mode: 'individual' | 'group') {
        const source = questionSources[mode];
        if (!source || source.length === 0) return null;
        const randomIndex = Math.floor(Math.random() * source.length);
        return source[randomIndex];
    }

    /** @param {Question | null} q */
    function updateCardContent(q: {
[x: string]: any; id: string | number; 
} | null) {
        const cardFrontP = document.querySelector('#card-front p');

        if (!q) {
            if (questionEn) questionEn.textContent = "恭喜！您已完成该模块所有题目！";
            if (cardFrontP instanceof HTMLElement) cardFrontP.style.display = 'none';
            if (questionFocus) questionFocus.textContent = '';
            if (questionPerspectives) questionPerspectives.innerHTML = '';
            if (scoringSystem) scoringSystem.innerHTML = '<p class="text-center text-gray-500">请切换模式或查看进度看板。</p>';
            if (submitScoreBtn instanceof HTMLButtonElement) {
                submitScoreBtn.disabled = true;
                submitScoreBtn.classList.add('opacity-50', 'cursor-not-allowed');
            }
            currentQuestion = null;
            return;
        }
        
        if (submitScoreBtn instanceof HTMLButtonElement) {
            submitScoreBtn.disabled = false;
            submitScoreBtn.classList.remove('opacity-50', 'cursor-not-allowed');
        }
        if (cardFrontP instanceof HTMLElement) cardFrontP.style.display = 'block';

        currentQuestion = q;
        if (questionEn) questionEn.textContent = q.question_en;
        if (questionFocus) questionFocus.textContent = q.focus;
        
        if (questionPerspectives) {
            questionPerspectives.innerHTML = '';
            q.perspectives.forEach((p: string | null) => {
                const li = document.createElement('li');
                li.textContent = p;
                questionPerspectives.appendChild(li);
            });
        }

        renderScoringSystem();
    }
    
    function renderScoringSystem() {
        if (!scoringSystem) return;
        scoringSystem.innerHTML = '';
        selfAssessmentItems.forEach(item => {
            const div = document.createElement('div');
            div.className = 'flex items-center justify-between';
            div.innerHTML = `
                <span class="text-gray-700">${item.name}</span>
                <div class="star-rating flex flex-row-reverse" data-item-id="${item.id}">
                    <input type="radio" name="rating-${item.id}" value="5" id="5-${item.id}" class="hidden"><label for="5-${item.id}" class="text-2xl">★</label>
                    <input type="radio" name="rating-${item.id}" value="4" id="4-${item.id}" class="hidden"><label for="4-${item.id}" class="text-2xl">★</label>
                    <input type="radio" name="rating-${item.id}" value="3" id="3-${item.id}" class="hidden"><label for="3-${item.id}" class="text-2xl">★</label>
                    <input type="radio" name="rating-${item.id}" value="2" id="2-${item.id}" class="hidden"><label for="2-${item.id}" class="text-2xl">★</label>
                    <input type="radio" name="rating-${item.id}" value="1" id="1-${item.id}" class="hidden"><label for="1-${item.id}" class="text-2xl">★</label>
                </div>
            `;
            scoringSystem.appendChild(div);
        });
    }

    function processNextQuestion() {
        if (isFlipping || !card) return;
        
        const nextQ = getNextQuestion(currentMode);
        
        isFlipping = true;

        const performFlip = () => {
            return new Promise((resolve) => {
                const handleFlipEnd = (/** @type {TransitionEvent} */ event: TransitionEvent) => {
                    if (event.target === card) {
                        card.removeEventListener('transitionend', handleFlipEnd);
                        resolve(undefined);
                    }
                };
                card.addEventListener('transitionend', handleFlipEnd);
                card.classList.remove('is-flipped');
            });
        };

        if (card.classList.contains('is-flipped')) {
            performFlip().then(() => {
                updateCardContent(nextQ);
                isFlipping = false;
            });
        } else {
            card.style.transition = 'opacity 0.4s';
            card.style.opacity = '0';
            setTimeout(() => {
                updateCardContent(nextQ);
                card.style.opacity = '1';
                setTimeout(() => {
                     card.style.transition = 'transform 0.8s';
                     isFlipping = false;
                }, 400);
            }, 400);
        }
    }
    
    function handleSubmitScore() {
        if (isFlipping || !currentQuestion || !scoringSystem) return;
        /** @type {{ [key: string]: number }} */
        const questionScores: { [key: string]: number } = {};
        let allRated = true;
        selfAssessmentItems.forEach(item => {
            const ratingInput = scoringSystem.querySelector( `input[name="rating-${item.id}"]:checked`);
            if (ratingInput instanceof HTMLInputElement) {
                questionScores[item.id] = parseInt(ratingInput.value, 10);
            } else {
                allRated = false;
            }
        });

        if (!allRated) {
            alert('请完成所有维度的评分！');
            return;
        }
        
        scores[currentQuestion.id] = questionScores;
        saveScores();
        
        processNextQuestion();
    }
    
    // --- Navigation ---
    /**
     * @param {string} page
     * @param {'individual' | 'group' | null} mode
     */
    function showPage(page: string, mode: 'individual' | 'group' | null = null) {
        document.querySelectorAll('.page-content').forEach(p => p.classList.remove('active'));
        const pageElement = document.getElementById(page);
        if (pageElement) pageElement.classList.add('active');
        
        document.querySelectorAll('.nav-button').forEach(b => b.classList.remove('active'));

        if (mode && navButtons[mode]) {
            currentMode = mode;
            navButtons[mode].classList.add('active');
            if (card) card.classList.remove('is-flipped');
            const nextQ = getNextQuestion(mode);
            updateCardContent(nextQ);
        } else if (navButtons.progress) {
            navButtons.progress.classList.add('active');
            updateProgressPage();
        }
    }

    // --- Progress Page Logic ---
    function updateProgressPage() {
        loadScores();
        const answeredIds = Object.keys(scores);
        const historyContainer = document.getElementById('history-container');
        const feedbackContainer = document.getElementById('feedback-container');

        if (answeredIds.length === 0) {
            if (stats.progress) stats.progress.innerHTML = `<div class="text-gray-500">练习进度</div><div class="text-3xl font-bold mt-1">0%</div>`;
            if (stats.avgScore) stats.avgScore.innerHTML = `<div class="text-gray-500">综合平均分</div><div class="text-3xl font-bold mt-1">N/A</div>`;
            if (stats.count) stats.count.innerHTML = `<div class="text-gray-500">已练习题目</div><div class="text-3xl font-bold mt-1">0</div>`;
            if (historyContainer) historyContainer.innerHTML = '<p class="text-center text-gray-500 p-4">暂无练习历史</p>';
            if (feedbackContainer) feedbackContainer.innerHTML = '<p class="text-center text-gray-500 p-4">完成至少一道题后，这里会生成您的专属建议。</p>';
            if(chartInstance) {
                chartInstance.destroy();
                chartInstance = null;
            }
            return;
        }

        const totalAnswered = answeredIds.length;
        const totalQuestions = allQuestions.length;
        const progressPercentage = ((totalAnswered / totalQuestions) * 100).toFixed(0);
        const avgScore = calculateOverallAverage();

        if (stats.progress) stats.progress.innerHTML = `<div class="text-gray-500">总练习进度</div><div class="text-3xl font-bold mt-1">${progressPercentage}%</div>`;
        if (stats.avgScore) stats.avgScore.innerHTML = `<div class="text-gray-500">综合平均分</div><div class="text-3xl font-bold mt-1">${avgScore.toFixed(2)}</div>`;
        if (stats.count) stats.count.innerHTML = `<div class="text-gray-500">已练习题目</div><div class="text-3xl font-bold mt-1">${totalAnswered}</div>`;
        
        if (historyContainer) renderHistory(historyContainer);
        const skillData = calculateSkillScores();
        renderRadarChart(skillData);
        if (feedbackContainer) renderFeedback(skillData, feedbackContainer);
    }

    function calculateOverallAverage() {
        let totalScore = 0;
        let count = 0;
        Object.values(scores).forEach(questionScore => {
            Object.values(questionScore as Record<string, number>).forEach(s => {
                totalScore += s;
                count++;
            });
        });
        return count > 0 ? totalScore / count : 0;
    }

    /** @param {HTMLElement} container */
    function renderHistory(container: HTMLElement) {
        container.innerHTML = '';
        const table = document.createElement('table');
        table.className = 'w-full text-sm text-left text-gray-500';
        table.innerHTML = `
            <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                <tr>
                    <th scope="col" class="py-3 px-6">题目</th>
                    <th scope="col" class="py-3 px-6 text-center">类型</th>
                    <th scope="col" class="py-3 px-6 text-center">平均分</th>
                </tr>
            </thead>
            <tbody></tbody>
        `;
        const tbody = table.querySelector('tbody');
        if (!tbody) return;

        Object.keys(scores).reverse().forEach(qId => {
            const question = allQuestions.find(q => q.id === parseInt(qId, 10));
            if (!question) return;
            const questionScore = scores[qId];
            const scoreValues = Object.values(questionScore as Record<string, number>);
            const avg = scoreValues.reduce((a, b) => Number(a) + Number(b), 0) / scoreValues.length;
            const tr = document.createElement('tr');
            tr.className = 'bg-white border-b';
            tr.innerHTML = `
                <td class="py-4 px-6 font-medium text-gray-900">${question.question_en}</td>
                <td class="py-4 px-6 text-center">${question.type === 'individual' ? '个人' : '小组'}</td>
                <td class="py-4 px-6 text-center font-semibold">${avg.toFixed(1)}</td>
            `;
            tbody.appendChild(tr);
        });
        container.appendChild(table);
    }
    
    /** @returns {SkillData} */
    /**
     * @returns {SkillData}
     */
    function calculateSkillScores() {
        const skillScores: { [key: string]: { total: number; count: number } } = {
            "学术能力": { total: 0, count: 0 },
            "综合素质": { total: 0, count: 0 },
            "适配度": { total: 0, count: 0 },
        };

        Object.entries(scores).forEach(([qId, questionScore]) => {
            const question = allQuestions.find(q => q.id === parseInt(qId, 10));
            if (!question) return;
            const scoreValues = Object.values(questionScore as Record<string, number>);
            const avgQScore = scoreValues.reduce((a, b) => a + b, 0) / scoreValues.length;
            
            question.skills.forEach(skillKey => {
                const skillName = skillMap[skillKey as keyof typeof skillMap];
                if (skillName && skillScores[skillName]) {
                    skillScores[skillName].total += avgQScore;
                    skillScores[skillName].count++;
                }
            });
        });

        /** @type {SkillData} */
        const finalScores: Record<string, number> = {};
        Object.entries(skillScores).forEach(([name, data]) => {
            finalScores[name] = data.count > 0 ? data.total / data.count : 0;
        });
        
        return finalScores;
    }

    /** @param {SkillData} skillData */
    /**
     * @param {SkillData} skillData
     */
    function renderRadarChart(skillData: { [s: string]: unknown; } | ArrayLike<unknown>) {
        if (typeof Chart === 'undefined') {
            console.error('Chart.js is not loaded.');
            return;
        }
        const canvas = document.getElementById('skill-radar-chart');
        if (!(canvas instanceof HTMLCanvasElement)) return;
        
        const ctx = canvas.getContext('2d');
        if (!ctx) return;
        
        if (chartInstance) chartInstance.destroy();
        
        chartInstance = new Chart(ctx, {
            type: 'radar',
            data: {
                labels: Object.keys(skillData),
                datasets: [{
                    label: '我的能力评估',
                    data: Object.values(skillData),
                    backgroundColor: 'rgba(0, 153, 68, 0.2)',
                    borderColor: 'rgba(0, 153, 68, 1)',
                    borderWidth: 2,
                    pointBackgroundColor: 'rgba(0, 153, 68, 1)',
                }]
            },
            options: {
                responsive: true, maintainAspectRatio: false,
                scales: { r: { angleLines: { color: 'rgba(0, 0, 0, 0.1)' }, grid: { color: 'rgba(0, 0, 0, 0.1)' }, pointLabels: { font: { size: 14 } }, suggestedMin: 0, suggestedMax: 5, ticks: { backdropColor: 'transparent', stepSize: 1 } } },
                plugins: { legend: { position: 'top' } }
            }
        });
    }

    /** * @param {SkillData} skillData 
     * @param {HTMLElement} container
     */
    /**
     * @param {SkillData} skillData
     * @param {HTMLElement} container
     */
    function renderFeedback(skillData: ArrayLike<unknown> | { [s: string]: unknown; }, container: HTMLElement) {
        container.innerHTML = '';
        Object.entries(skillData).forEach(([skillName, score]) => {
            const numericScore = score as number;
            let adviceKey = numericScore < 3.0 ? 'low' : (numericScore < 4.5 ? 'mid' : 'high');
            const adviceObj = feedbackAdvice[skillName as keyof typeof feedbackAdvice] as { low: string; mid: string; high: string } | undefined;
            const adviceText = adviceObj ? adviceObj[adviceKey as keyof typeof adviceObj] : '';
            const bgColor = numericScore < 3.0 ? 'bg-red-50' : (numericScore < 4.5 ? 'bg-yellow-50' : 'bg-green-50');
            const borderColor = numericScore < 3.0 ? 'border-red-500' : (numericScore < 4.5 ? 'border-yellow-500' : 'border-green-500');
            container.innerHTML += `
                <div class="${bgColor} border-l-4 ${borderColor} p-4 rounded">
                    <p class="font-bold text-gray-800">${skillName} (平均分: ${numericScore.toFixed(2)})</p>
                    <p class="mt-1">${adviceText}</p>
                </div>
            `;
        });
    }

    // --- Event Listeners ---
    if (card) {
        card.addEventListener('click', (/** @type {MouseEvent} */ e: MouseEvent) => {
            if (isFlipping || !currentQuestion) return;
            
            const target = /** @type {Element | null} */ (e.target);
            if (!target) return;

            // Prevent flip when clicking on the rating system inside the back card
            if ((target as Element).closest('#scoring-system') || (target as Element).closest('#submit-score-btn')) {
                return;
            }
            if (!card.classList.contains('is-flipped')) {
                card.classList.add('is-flipped');
            }
        });
    }

    if (submitScoreBtn) submitScoreBtn.addEventListener('click', handleSubmitScore);
    if (skipBtn) skipBtn.addEventListener('click', () => processNextQuestion());
    if (navButtons.individual) navButtons.individual.addEventListener('click', () => showPage('page-practice', 'individual'));
    if (navButtons.group) navButtons.group.addEventListener('click', () => showPage('page-practice', 'group'));
    if (navButtons.progress) navButtons.progress.addEventListener('click', () => showPage('page-progress'));

    // --- Initialization ---
    window.onload = () => {
        loadScores();
        showPage('page-practice', 'individual');
    };

    </script>
</body>
</html>
